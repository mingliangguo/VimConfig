let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
argglobal
let s:cpo_save=&cpo
set cpo&vim
nmap <buffer> <NL>A <Plug>ZenCodingAnchorizeSummary
nmap <buffer> <NL>a <Plug>ZenCodingAnchorizeURL
nmap <buffer> <NL>k <Plug>ZenCodingRemoveTag
nmap <buffer> <NL>j <Plug>ZenCodingSplitJoinTagNormal
nmap <buffer> <NL>/ <Plug>ZenCodingToggleComment
nmap <buffer> <NL>i <Plug>ZenCodingImageSize
nmap <buffer> <NL>N <Plug>ZenCodingPrev
nmap <buffer> <NL>n <Plug>ZenCodingNext
vmap <buffer> <NL>D <Plug>ZenCodingBalanceTagOutwardVisual
nmap <buffer> <NL>D <Plug>ZenCodingBalanceTagOutwardNormal
vmap <buffer> <NL>d <Plug>ZenCodingBalanceTagInwardVisual
nmap <buffer> <NL>d <Plug>ZenCodingBalanceTagInwardNormal
nmap <buffer> <NL>; <Plug>ZenCodingExpandWord
nmap <buffer> <NL>, <Plug>ZenCodingExpandNormal
vmap <buffer> <NL>, <Plug>ZenCodingExpandVisual
inoremap <buffer> <silent> ­ =EchoFuncP()
inoremap <buffer> <silent> ½ =EchoFuncN()
onoremap <buffer> <silent> [[ ?\(.*\%#\)\@!\_^\s*\zs\(\(abstract\s\+\|final\s\+\|private\s\+\|protected\s\+\|public\s\+\|static\s\+\)*function\|\(abstract\s\+\|final\s\+\)*class\|interface\)?:nohls
nnoremap <buffer> <silent> [[ ?\(.*\%#\)\@!\_^\s*\zs\(\(abstract\s\+\|final\s\+\|private\s\+\|protected\s\+\|public\s\+\|static\s\+\)*function\|\(abstract\s\+\|final\s\+\)*class\|interface\)?:nohls
noremap <buffer> <silent> \ef :call EchoFunc(expand("<cword>"))
onoremap <buffer> <silent> ]] /\(.*\%#\)\@!\_^\s*\zs\(\(abstract\s\+\|final\s\+\|private\s\+\|protected\s\+\|public\s\+\|static\s\+\)*function\|\(abstract\s\+\|final\s\+\)*class\|interface\)/:nohls
nnoremap <buffer> <silent> ]] /\(.*\%#\)\@!\_^\s*\zs\(\(abstract\s\+\|final\s\+\|private\s\+\|protected\s\+\|public\s\+\|static\s\+\)*function\|\(abstract\s\+\|final\s\+\)*class\|interface\)/:nohls
imap <buffer> <NL>A <Plug>ZenCodingAnchorizeSummary
imap <buffer> <NL>a <Plug>ZenCodingAnchorizeURL
imap <buffer> <NL>k <Plug>ZenCodingRemoveTag
imap <buffer> <NL>j <Plug>ZenCodingSplitJoinTagInsert
imap <buffer> <NL>/ <Plug>ZenCodingToggleComment
imap <buffer> <NL>i <Plug>ZenCodingImageSize
imap <buffer> <NL>N <Plug>ZenCodingPrev
imap <buffer> <NL>n <Plug>ZenCodingNext
imap <buffer> <NL>D <Plug>ZenCodingBalanceTagOutwardInsert
imap <buffer> <NL>d <Plug>ZenCodingBalanceTagInwardInsert
imap <buffer> <NL>; <Plug>ZenCodingExpandWord
imap <buffer> <NL>, <Plug>ZenCodingExpandAbbr
nnoremap <buffer> <silent> ­ :call EchoFuncP()
nnoremap <buffer> <silent> ½ :call EchoFuncN()
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=>s,e0,n0,f0,{0,}0,^0,:0,=s,l0,b0,g0,hs,ps,ts,is,+s,c3,C0,0,(0,us,U0,w0,W0,m0,j0,)20,*30
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=s1:/*,mb:*,ex:*/,://,:#
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=~/.vim/dict/php_funclist.dict
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'php'
setlocal filetype=php
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=9999
setlocal foldmarker={,}
setlocal foldmethod=marker
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=qrowcb
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=\\(require\\|include\\)\\(_once\\)\\?
setlocal includeexpr=
setlocal indentexpr=GetPhpIndent()
setlocal indentkeys=0{,0},0),:,!^F,o,O,e,*<Return>,=?>,=<?,=*/
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:],<:>
setlocal modeline
setlocal modifiable
setlocal nrformats=
setlocal number
setlocal numberwidth=4
setlocal omnifunc=phpcomplete#CompletePHP
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'php'
setlocal syntax=php
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal nowrap
setlocal wrapmargin=0
let s:l = 7 - ((6 * winheight(0) + 14) / 29)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
7
normal! 0
lcd /Applications/MAMP/htdocs/moodle
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
" vim: set ft=vim :
